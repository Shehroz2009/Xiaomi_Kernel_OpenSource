/* SPDX-License-Identifier: GPL-2.0-only */
/*
 * Copyright (c) 2020, The Linux Foundation. All rights reserved.
 * Copyright (c) 2020 XiaoMi, Inc. All rights reserved.
 */

#ifndef _PANEL_M12_42_02_0A_DSC_CMD_H_
#define _PANEL_M12_42_02_0A_DSC_CMD_H_

#include <drm/drm_panel.h>
#include <drm/drm_modes.h>
#include <drm/mediatek_drm.h>
#include "mi_panel_ext.h"
#include "mi_dsi_panel_count.h"

#define DATA_RATE0		1152
#define DATA_RATE1		1152
#define DATA_RATE2		1152
#define DATA_RATE3		1152

#define MODE3_FPS		144
#define MODE3_HFP		160
#define MODE3_HSA		2
#define MODE3_HBP		4
#define MODE3_VFP		54
#define MODE3_VSA		10
#define MODE3_VBP		10

#define MODE2_FPS		90
#define MODE2_HFP		160
#define MODE2_HSA		2
#define MODE2_HBP		4
#define MODE2_VFP		54
#define MODE2_VSA		10
#define MODE2_VBP		10

#define MODE1_FPS		120
#define MODE1_HFP		160
#define MODE1_HSA		2
#define MODE1_HBP		4
#define MODE1_VFP		54
#define MODE1_VSA		10
#define MODE1_VBP		10

#define MODE0_FPS		60
#define MODE0_HFP		408
#define MODE0_HSA		2
#define MODE0_HBP		4
#define MODE0_VFP		54
#define MODE0_VSA		10
#define MODE0_VBP		10

#define FRAME_WIDTH		(1220)
#define	FRAME_HEIGHT		(2712)

#define MAX_BRIGHTNESS_CLONE	16383
#define RTE_OFF			0xFFFF
#define RTE_CMD			0xEEEE

#define REGFLAG_DELAY		0xFFFC
#define REGFLAG_UDELAY		0xFFFB
#define REGFLAG_END_OF_TABLE    0xFFFD
#define REGFLAG_RESET_LOW	0xFFFE
#define REGFLAG_RESET_HIGH	0xFFFF

#define SPR_2D_RENDERING_DUMMY
#ifdef SPR_2D_RENDERING_DUMMY
#define SPR_2D_RENDERING (1)
#endif

#define DSC_ENABLE                  1
#define DSC_VER                     17
#define DSC_SLICE_MODE              1
#define DSC_RGB_SWAP                0
#define DSC_DSC_CFG                 40
#define DSC_RCT_ON                  1
#define DSC_BIT_PER_CHANNEL         10
#define DSC_DSC_LINE_BUF_DEPTH      11
#define DSC_BP_ENABLE               1
#define DSC_BIT_PER_PIXEL           128
#define DSC_SLICE_HEIGHT            12
#define DSC_SLICE_WIDTH             610
#define DSC_CHUNK_SIZE              610
#define DSC_XMIT_DELAY              512
#define DSC_DEC_DELAY               562
#define DSC_SCALE_VALUE             32
#define DSC_INCREMENT_INTERVAL      305
#define DSC_DECREMENT_INTERVAL      8
#define DSC_LINE_BPG_OFFSET         12
#define DSC_NFL_BPG_OFFSET          2235
#define DSC_SLICE_BPG_OFFSET        1915
#define DSC_INITIAL_OFFSET          6144
#define DSC_FINAL_OFFSET            4336
#define DSC_FLATNESS_MINQP          7
#define DSC_FLATNESS_MAXQP          16
#define DSC_RC_MODEL_SIZE           8192
#define DSC_RC_EDGE_FACTOR          6
#define DSC_RC_QUANT_INCR_LIMIT0    15
#define DSC_RC_QUANT_INCR_LIMIT1    15
#define DSC_RC_TGT_OFFSET_HI        3
#define DSC_RC_TGT_OFFSET_LO        3

#define TEMP_INDEX1_35 0x01
#define TEMP_INDEX2_30 0x20
#define TEMP_INDEX3_28 0x40
#define TEMP_INDEX4_off 0x80

/* For reload gamma to flash */
static const int sGiroff_60hz_Index =    5;
static const int sGiroff_120hz_Index =   5;
static const int sGiroff_90hz_Index =    2;
static const int sGiroff_144hz_Index =   2;

static const int sGiron_60hz_Index =     6;
static const int sGiron_120hz_Index =    6;
static const int sGiron_90hz_Index =     3;
static const int sGiron_144hz_Index =    3;

static const int sGir_Switch_on_120hz_Index = 11;
static const int sGir_Switch_off_120hz_Index = 11;
static const int sGir_Switch_on_not_60hz_Index = 10;
static const int sGir_Switch_off_not_60hz_Index = 10;

static char reload_gamma_info_cmdline[100] = {0};
struct reloadgamma_table {
	unsigned char gir_on_120[4];
	unsigned char gir_off_120[4];
	unsigned char gir_on_144[4];
	unsigned char gir_off_144[4];
};
static struct reloadgamma_table sReloadgamma_table;

static const char *panel_name = "panel_name=dsi_m12_42_02_0a_dsc_cmd";
static const int panel_id= PANEL_1ST;

static void panel_parse_reloadgamma_info(struct reloadgamma_table *reloadgamma_table);

static struct LCM_setting_table init_setting[] = {
	// OSC 138MHZ
	{0xFF, 04, {0xAA,0x55,0xA5,0x81}},
	{0x6F, 01, {0x0F}},
	{0xFD, 01, {0x01}},
	{0x6F, 01, {0x10}},
	{0xFD, 01, {0xAF}},
	// VESA OSC 182MHZ
	{0x6F, 01, {0x23}},
	{0xFD, 01, {0x01}},
	{0x6F, 01, {0x24}},
	{0xFD, 01, {0xBB}},
	// RCN setting
	{0xFF, 04, {0xAA,0x55,0xA5,0x80}},
	{0x6F, 01, {0x1D}},
	{0xF2, 01, {0x05}},
	// video trim
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x01}},
	{0xC3, 07, {0x9C,0x01,0xAF,0xD0,0x22,0x02,0x00}},
	// Page0
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x1C}},
	// Demura gain mapping
	{0xC0, 05, {0x00,0x33,0x00,0x00,0x11}},
	{0x26, 01, {0x08}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x03, 01, {0x01}},
	// DSC setting
	{0x3B, 04, {0x00,0x14,0x00,0x14}},
	{0x90, 01, {0x11}},
	{0x91, 18, {0xAB,0x28,0x00,0x0C,0xC2,0x00,0x02,0x32,0x01,0x31,0x00,0x08,0x08,0xBB,0x07,0x7B,0x10,0xF0}},
	{0x2C, 01, {0x00}},
	// Common setting
	{0x51, 04, {0x00,0x00,0x00,0x00}},
	{0x53, 01, {0x20}},
	{0x35, 01, {0x00}},
	{0x2A, 04, {0x00,0x00,0x04,0xC3}},
	{0x2B, 04, {0x00,0x00,0x0A,0x97}},
	// Round ON
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x07}},
	{0xC0, 01, {0x01}},
	//PXLW_IRIS, adjust scanline
	{0x44, 02, {0x0A, 0x70}},
	/* ESD Error Flag, Normal High, Error Low */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x05}},
	{0xBE, 01, {0x88}},
	// Remove black frame
	{0xFF, 04, {0xAA,0x55,0xA5,0x80}},
	{0x6F, 01, {0x61}},
	{0xF3, 01, {0x80}},
	// DBI setting
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0xC1, 05, {0x22,0x80,0x3B,0x01,0x81}},
	{0xC6, 01, {0x11}},
	{0xCA, 18, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0xCB, 18, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0xCD, 18, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0xD2, 07, {0x80,0x01,0x10,0x00,0x98,0x00,0x52}},
	{0x67, 04, {0x32,0x24,0x38,0x38}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table gir_off_gamma_update[] = {
	// GAMMA UPDATE
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x09}},
	{0xC0, 03, {0x60,0x40,0x60}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x02}},
	{0xCC, 01, {0x30}},
	{0xCE, 01, {0x01}},
	{0xCC, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table gir_on_gamma_update[] = {
	// GAMMA UPDATE
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x02}},
	{0xCC, 01, {0x30}},
	{0xCE, 01, {0x01}},
	{0xCC, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table gir_on_reload[] = {
	// Page4
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x04}},
	{0xB4, 01, {0x17}},//need update
	{0x6F, 01, {0x15}},
	{0xB4, 05, {0x1F,0x00,0x00,0x0D,0x63}},
	// page0
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x09}},
	{0xC0, 03, {0x00,0x40,0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table sleep_out_setting[] = {
	{REGFLAG_DELAY, 17, {}},
	// Gamma auto update
	{0xCC, 01, {0x00}},
	{0x11, 01, {0x00}},
	{REGFLAG_DELAY, 120, {}},
	{0x29, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

/* mode switch peak2600 code start */
static struct LCM_setting_table mode_144hz_setting_gir_off_peak2600[] = {
	// FCON2, 144hz
	{0x2F, 01, {0x03}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF Setting, readdate 13~16
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0xD8, 0x01, 0x1B,
				0x01, 0x1B, 0x01, 0xBA, 0x01, 0xBA,
				0x02, 0xC7, 0x02, 0xC7, 0x04, 0xCD,
				0x04, 0xCD, 0x07, 0xAC, 0x07, 0xAC,
				0x0B, 0xCE, 0x0B, 0xCE, 0x0B, 0xCE,
				0x0B, 0xCE, 0x0B, 0xCE, 0x0B, 0xCE,
				0x0D, 0x48}},
	// GIR OFF
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
static struct LCM_setting_table mode_144hz_setting_gir_on_peak2600[] = {
	// FCON3, 144hz
	{0x2F, 01, {0x03}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON Setting, readdate 9~12
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0xD8, 0x01, 0x1B,
				0x01, 0x1B, 0x01, 0xBA, 0x01, 0xBA,
				0x02, 0xC7, 0x02, 0xC7, 0x04, 0xCD,
				0x04, 0xCD, 0x07, 0xAC, 0x07, 0xAC,
				0x0B, 0xCE, 0x0B, 0xCE, 0x0B, 0xCE,
				0x0B, 0xCE, 0x0B, 0xCE, 0x0B, 0xCE,
				0x0D, 0x48}},
	// GIR ON
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
static struct LCM_setting_table mode_120hz_setting_gir_off_peak2600[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38}},
	// FCON1, 120hz
	{0x2F, 01, {0x02}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF Setting, readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR OFF
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
static struct LCM_setting_table mode_120hz_setting_gir_on_peak2600[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38}},
	// FCON1, 120hz
	{0x2F, 01, {0x02}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON Setting, readdate 1~4
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR ON
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
static struct LCM_setting_table mode_90hz_setting_gir_off_peak2600[] = {
	// FCON3, 90hz
	{0x2F, 01, {0x04}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF Setting, readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR OFF
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
static struct LCM_setting_table mode_90hz_setting_gir_on_peak2600[] = {
	// FCON3, 90hz
	{0x2F, 01, {0x04}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON Setting, readdate 1~4
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR ON
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
static struct LCM_setting_table mode_60hz_setting_gir_off_peak2600[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14}},
	// FCON5(HFR5, 60hz)
	{0x2F, 01, {0x08}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF setting. readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR OFF
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
static struct LCM_setting_table mode_60hz_setting_gir_on_peak2600[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14}},
	// FCON5(HFR5, 60hz)
	{0x2F, 01, {0x08}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON setting, readdate 1~4
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR ON
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
/* mode switch peak2600 code end */

/* mode switch start */
static struct LCM_setting_table mode_144hz_setting_gir_off[] = {
	// FCON2, 144hz
	{0x2F, 01, {0x03}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF Setting, readdate 13~16
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR OFF
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_144hz_setting_gir_on[] = {
	// FCON3, 144hz
	{0x2F, 01, {0x03}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON Setting, readdate 9~12
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR ON
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_120hz_setting_gir_off[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38}},
	// FCON1, 120hz
	{0x2F, 01, {0x02}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF Setting, readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR OFF
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_120hz_setting_gir_on[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38}},
	// FCON1, 120hz
	{0x2F, 01, {0x02}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON Setting, readdate 1~4
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR ON
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_90hz_setting_gir_off[] = {
	// FCON3, 90hz
	{0x2F, 01, {0x04}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF Setting, readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR OFF
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_90hz_setting_gir_on[] = {
	// FCON3, 90hz
	{0x2F, 01, {0x04}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON Setting, readdate 1~4
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR ON
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_60hz_setting_gir_off[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14}},
	// FCON5(HFR5, 60hz)
	{0x2F, 01, {0x08}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF setting. readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR OFF
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_60hz_setting_gir_on[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14}},
	// FCON5(HFR5, 60hz)
	{0x2F, 01, {0x08}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON setting, readdate 1~4
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR ON
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
/* mode switch end */

/* GIR start */
/* for 120hz gir switch */
static struct LCM_setting_table gir_off_120hz_settings[] = {
	// Page4
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	{0xB2, 01, {0xC0}},
	// FCON reload
	{0xC2, 01, {0x57}},
	{0x6F, 01, {0x01}},
	// Demura reload 64byte
	{0xB2, 24, {0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60}},
	// BRS Setting
	{0xB4, 01, {0x1C}},
	{0x6F, 01, {0x0B}},
	// Reload OFF GAMMA
	{0xB4, 15, {0x1F,0x20,0x00,0x0D,0x63,0x1F,0x20,
				0x00,0x0D,0x63,0x1F,0x20,0x00,0x0D,0x63}},
	// Normal，120Hz Copy
	{0x2F, 01, {0x01}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON/OFF setting. readdate 1~8
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR OFF
	{0x5F, 01, {0x01}},
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x09}},
	// Preset3 gamma
	{0xC0, 03, {0x60, 0x40, 0x60}},
};

static struct LCM_setting_table gir_off_120hz_reload[] = {
	// Page4
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	// FCON Reload OFF
	{0xB2, 01, {0x40}},
	// FCON1(HFR1，120Hz)
	{0x2F, 01, {0x02}},
};

static struct LCM_setting_table gir_on_120hz_settings[] = {
	// Page4
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	{0xB2, 01, {0xC0}},
	// FCON reload
	{0xC2, 01, {0x57}},
	{0x6F, 01, {0x01}},
	// Demura reload 64byte
	{0xB2, 24, {0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60}},
	// BRS Setting
	{0xB4, 01, {0x1C}},
	{0x6F, 01, {0x0B}},
	// Reload ON GAMMA
	{0xB4, 15, {0x1F,0x00,0x00,0x0D,0x63,0x1F,0x00,0x00,
				0x0D,0x63,0x1F,0x00,0x00,0x0D,0x63}},
	//Normal，120Hz Copy
	{0x2F, 01, {0x01}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON setting. readdate 1~8
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x09}},
	// normal gamma
	{0xC0, 03, {0x00, 0x40, 0x00}},
};

static struct LCM_setting_table gir_on_120hz_reload[] = {
	// Page4
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	// FCON Reload OFF
	{0xB2, 01, {0x40}},
	// FCON1, 120hz
	{0x2F, 01, {0x02}},
	// GIR ON
	{0x5F, 01, {0x00}},
};

/* for 60/90/144hz GIR switch */
/* gir peak2600 start*/
static struct LCM_setting_table gir_off_not_120hz_settings_peak2600[] = {
	// Page4
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	{0xB2, 01, {0xC0}},
	// FCON reload
	{0xC2, 01, {0x57}},
	{0x6F, 01, {0x01}},
	// Demura reload 64byte
	{0xB2, 24, {0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60}},
	// BRS Setting
	{0xB4, 01, {0x1C}},
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF setting. readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR OFF
	{0x5F, 01, {0x01}},
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x09}},
	// Preset3 gamma
	{0xC0, 03, {0x60, 0x40, 0x60}},
	// Page2
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	{0x6F, 01, {0x0B}},
	// Reload GIR off
	{0xB4, 15, {0x1F, 0x20, 0x00, 0x0D, 0x63, 0x1F,
			0x20, 0x00, 0x0D, 0x63, 0x1F, 0x20,
			0x00, 0x0D, 0x63}},
	// FCON1, 120hz
	{0x2F, 01, {0x02}},
};

static struct LCM_setting_table gir_on_not_120hz_settings_peak2600[] = {
	// Page4
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	{0xB2, 01, {0xC0}},
	// FCON reload
	{0xC2, 01, {0x57}},
	{0x6F, 01, {0x01}},
	// Demura reload 64byte
	{0xB2, 24, {0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60}},
	// BRS Setting
	{0xB4, 01, {0x1C}},
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF setting. readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR OFF
	{0x5F, 01, {0x01}},
	// Page4
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	{0x6F, 01, {0x0B}},
	// Reload GIR on
	{0xB4, 15, {0x1F, 0x00, 0x00, 0x0D, 0x63, 0x1F,
			0x00, 0x00, 0x0D, 0x63, 0x1F, 0x00,
			0x00, 0x0D, 0x63}},
	// FCON1, 120hz
	{0x2F, 01, {0x02}},
};

static struct LCM_setting_table gir_off_144hz_peak2600[] = {
	// FCON2, 144hz
	{0x2F, 01, {0x03}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF Setting, readdate 13~16
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0xD8, 0x01, 0x1B,
				0x01, 0x1B, 0x01, 0xBA, 0x01, 0xBA,
				0x02, 0xC7, 0x02, 0xC7, 0x04, 0xCD,
				0x04, 0xCD, 0x07, 0xAC, 0x07, 0xAC,
				0x0B, 0xCE, 0x0B, 0xCE, 0x0B, 0xCE,
				0x0B, 0xCE, 0x0B, 0xCE, 0x0B, 0xCE,
				0x0D, 0x48}},
	// GIR OFF
	{0x5F, 01, {0x01}},
};

static struct LCM_setting_table gir_on_144hz_peak2600[] = {
	// FCON3, 144hz
	{0x2F, 01, {0x03}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON Setting, readdate 9~12
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0xD8, 0x01, 0x1B,
				0x01, 0x1B, 0x01, 0xBA, 0x01, 0xBA,
				0x02, 0xC7, 0x02, 0xC7, 0x04, 0xCD,
				0x04, 0xCD, 0x07, 0xAC, 0x07, 0xAC,
				0x0B, 0xCE, 0x0B, 0xCE, 0x0B, 0xCE,
				0x0B, 0xCE, 0x0B, 0xCE, 0x0B, 0xCE,
				0x0D, 0x48}},
	// GIR ON
	{0x5F, 01, {0x00}},
};

static struct LCM_setting_table gir_off_90hz_peak2600[] = {
	// FCON3, 90hz
	{0x2F, 01, {0x04}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF Setting, readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR OFF
	{0x5F, 01, {0x01}},
};

static struct LCM_setting_table gir_on_90hz_peak2600[] = {
	// FCON3, 90hz
	{0x2F, 01, {0x04}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON Setting, readdate 1~4
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR ON
	{0x5F, 01, {0x00}},
};

static struct LCM_setting_table gir_off_60hz_peak2600[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14}},
	// FCON5(HFR5, 60hz)
	{0x2F, 01, {0x08}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF setting. readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR OFF
	{0x5F, 01, {0x01}},
};

static struct LCM_setting_table gir_on_60hz_peak2600[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14}},
	// FCON5(HFR5, 60hz)
	{0x2F, 01, {0x08}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON setting, readdate 1~4
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	{0xB7, 38, {0x00, 0x00, 0x00, 0x93, 0x00, 0xC0,
				0x00, 0xC0, 0x01, 0x2C, 0x01, 0x2C,
				0x01, 0xE2, 0x01, 0xE2, 0x03, 0x41,
				0x03, 0x41, 0x05, 0x33, 0x05, 0x33,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x08, 0x00, 0x08, 0x00, 0x08, 0x00,
				0x09, 0x00}},
	// GIR ON
	{0x5F, 01, {0x00}},
};
/* gir peak2600 end*/

static struct LCM_setting_table gir_off_not_120hz_settings[] = {
	// Page4
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	{0xB2, 01, {0xC0}},
	// FCON reload
	{0xC2, 01, {0x57}},
	{0x6F, 01, {0x01}},
	// Demura reload 64byte
	{0xB2, 24, {0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60}},
	// BRS Setting
	{0xB4, 01, {0x1C}},
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF setting. readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR OFF
	{0x5F, 01, {0x01}},
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x09}},
	// Preset3 gamma
	{0xC0, 03, {0x60, 0x40, 0x60}},
	// Page2
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	{0x6F, 01, {0x0B}},
	// Reload GIR off
	{0xB4, 15, {0x1F, 0x20, 0x00, 0x0D, 0x63, 0x1F,
			0x20, 0x00, 0x0D, 0x63, 0x1F, 0x20,
			0x00, 0x0D, 0x63}},
	// FCON1, 120hz
	{0x2F, 01, {0x02}},
};

static struct LCM_setting_table gir_on_not_120hz_settings[] = {
	// Page4
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	{0xB2, 01, {0xC0}},
	// FCON reload
	{0xC2, 01, {0x57}},
	{0x6F, 01, {0x01}},
	// Demura reload 64byte
	{0xB2, 24, {0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
			0x0C, 0xA0, 0x00, 0x00, 0x00, 0x60}},
	// BRS Setting
	{0xB4, 01, {0x1C}},
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
			0x00, 0x38}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF setting. readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR OFF
	{0x5F, 01, {0x01}},
	// Page4
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	{0x6F, 01, {0x0B}},
	// Reload GIR on
	{0xB4, 15, {0x1F, 0x00, 0x00, 0x0D, 0x63, 0x1F,
			0x00, 0x00, 0x0D, 0x63, 0x1F, 0x00,
			0x00, 0x0D, 0x63}},
	// FCON1, 120hz
	{0x2F, 01, {0x02}},
};

static struct LCM_setting_table gir_off_144hz[] = {
	// FCON2, 144hz
	{0x2F, 01, {0x03}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF Setting, readdate 13~16
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR OFF
	{0x5F, 01, {0x01}},
};

static struct LCM_setting_table gir_on_144hz[] = {
	// FCON3, 144hz
	{0x2F, 01, {0x03}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON Setting, readdate 9~12
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR ON
	{0x5F, 01, {0x00}},
};

static struct LCM_setting_table gir_off_90hz[] = {
	// FCON3, 90hz
	{0x2F, 01, {0x04}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF Setting, readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR OFF
	{0x5F, 01, {0x01}},
};

static struct LCM_setting_table gir_on_90hz[] = {
	// FCON3, 90hz
	{0x2F, 01, {0x04}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON Setting, readdate 1~4
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR ON
	{0x5F, 01, {0x00}},
};

static struct LCM_setting_table gir_off_60hz[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14}},
	// FCON5(HFR5, 60hz)
	{0x2F, 01, {0x08}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	// GIR OFF setting. readdate 5~8
	{0xE9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR OFF
	{0x5F, 01, {0x01}},
};

static struct LCM_setting_table gir_on_60hz[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x44}},
	// EM DUTY
	{0xB3, 14, {0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14, 0x00, 0x14, 0x00, 0x14,
			0x00, 0x14}},
	// FCON5(HFR5, 60hz)
	{0x2F, 01, {0x08}},
	// Page8
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x07}},
	// GIR ON setting, readdate 1~4
	{0xB9, 04, {0x00, 0x00, 0x00, 0x00}}, // need update
	// GIR ON
	{0x5F, 01, {0x00}},
};
/* GIR end */
static struct LCM_setting_table gamma_auto_update[] = {
	// Page2
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	// Gamma auto update
	{0xCC, 01, {0x00}},
};

static struct LCM_setting_table fcon_reload_off[] = {
	// Page2
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	// Gamma auto update
	{0xB2, 01, {0x40}},
};

static struct LCM_setting_table fcon_reload_off2[] = {
	// Page2
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x04}},
	// Gamma auto update
	{0xB2, 01, {0x40}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x09}},
	{0xC0, 03, {0x00,0x40,0x00}},
};

static struct LCM_setting_table gray_3d_lut_on[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x19}},
	{0xD4, 01, {0x80}},
	{0x57, 01, {0x00}},
};

static struct LCM_setting_table gray_3d_lut_off[] = {
	// Page0
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x19}},
	{0xD4, 01, {0x00}},
};

static struct LCM_setting_table lhbm_normal_white_1200nit[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x17}},
	{0xB2, 02, {0x07, 0xFF}},
	{0x6F, 01, {0x1F}},
	{0xB2, 02, {0x00, 0x50}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD1, 01, {0x01}},
	{0x6F, 01, {0x08}},
	//dataR_H, dataR_L, dataG_H, dataG_L, dataB_H, dataB_L
	{0xD0, 06, {0x09, 0x6A, 0x08, 0x3D, 0x0A, 0x18}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x07}},
	{0xD9, 01, {0x40}},
	{0xC0, 01, {0x01}},
	{0x51, 02, {0x07, 0xFF}},
	{0x6F, 01, {0x01}},
	{0x88, 04, {0x02, 0x62, 0x09, 0x8C}},
	{0x87, 02, {0x1F, 0xFA}},
	{0x88, 01, {0x01}},
	{0x85, 01, {0x01}}
};

static struct LCM_setting_table lhbm_hlpm_white_1200nit[] = {
	//AOD off
	{0x51, 02, {0x00, 0x14}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xB2, 01, {0x98}},
	{0x65, 01, {0x00}},
	{0x38, 01, {0x00}},
	{0x2C, 01, {0x00}},
	//hlpm_white900
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x17}},
	{0xB2, 02, {0x07, 0xFF}},
	{0x6F, 01, {0x1F}},
	{0xB2, 02, {0x00, 0x50}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD1, 01, {0x01}},
	{0x6F, 01, {0x08}},
	//dataR_H, dataR_L, dataG_H, dataG_L, dataB_H, dataB_L
	{0xD0, 06, {0x09, 0x6A, 0x08, 0x3D, 0x0A, 0x18}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x07}},
	{0xD9, 01, {0x40}},
	{0xC0, 01, {0x01}},
	{0x51, 02, {0x07, 0xFF}},
	{0x6F, 01, {0x01}},
	{0x88, 04, {0x02, 0x62, 0x09, 0x8C}},
	{0x87, 02, {0x1F, 0xFA}},
	{0x88, 01, {0x01}},
	{0x85, 01, {0x01}}
};

static struct LCM_setting_table lhbm_normal_white_250nit[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x17}},
	{0xB2, 02, {0x07, 0xFF}},
	{0x6F, 01, {0x1F}},
	{0xB2, 02, {0x00, 0x50}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD1, 01, {0x01}},
	{0x6F, 01, {0x08}},
	//dataR_H, dataR_L, dataG_H, dataG_L, dataB_H, dataB_L
	{0xD0, 06, {0x06, 0x13, 0x05, 0x60, 0x06, 0x8F}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x07}},
	{0xD9, 01, {0x40}},
	{0xC0, 01, {0x01}},
	{0x51, 02, {0x07, 0xFF}},
	{0x6F, 01, {0x01}},
	{0x88, 04, {0x02, 0x62, 0x09, 0x8C}},
	{0x87, 02, {0x12, 0xDC}},
	{0x88, 01, {0x01}},
	{0x85, 01, {0x01}}
};

static struct LCM_setting_table lhbm_hlpm_white_250nit[] = {
	//AOD update exit
	{0x51, 02, {0x00, 0x14}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xB2, 01, {0x98}},
	{0x65, 01, {0x00}},
	{0x38, 01, {0x00}},
	{0x2C, 01, {0x00}},
	//hlpm_white900
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x17}},
	{0xB2, 02, {0x07, 0xFF}},
	{0x6F, 01, {0x1F}},
	{0xB2, 02, {0x00, 0x50}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD1, 01, {0x01}},
	{0x6F, 01, {0x08}},
	//dataR_H, dataR_L, dataG_H, dataG_L, dataB_H, dataB_L
	{0xD0, 06, {0x06, 0x13, 0x05, 0x60, 0x06, 0x8F}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x07}},
	{0xD9, 01, {0x40}},
	{0xC0, 01, {0x01}},
	{0x51, 02, {0x07, 0xFF}},
	{0x6F, 01, {0x01}},
	{0x88, 04, {0x02, 0x62, 0x09, 0x8C}},
	{0x87, 02, {0x12, 0xDC}},
	{0x88, 01, {0x01}},
	{0x85, 01, {0x01}}
};

static struct LCM_setting_table lhbm_normal_green_500nit[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x17}},
	{0xB2, 02, {0x07, 0xFF}},
	{0x6F, 01, {0x1F}},
	{0xB2, 02, {0x00, 0x50}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD1, 01, {0x01}},
	{0x6F, 01, {0x08}},
	//dataR_H, dataR_L, dataG_H, dataG_L, dataB_H, dataB_L
	{0xD0, 06, {0x00, 0x00, 0x07, 0xF1, 0x00, 0x00}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x07}},
	{0xD9, 01, {0x40}},
	{0xC0, 01, {0x01}},
	{0x51, 02, {0x07, 0xFF}},
	{0x6F, 01, {0x01}},
	{0x88, 04, {0x02, 0x62, 0x09, 0x8C}},
	{0x87, 02, {0x1F, 0xFA}},
	{0x88, 01, {0x01}},
	{0x85, 01, {0x01}}
};


static struct LCM_setting_table lhbm_off[] = {
	{0x51, 04, {0x05, 0xFF, 0x07, 0xFF}},
	{0x87, 02, {0x0F, 0xFF}},
	{0x88, 01, {0x01}},
	{0x86, 01, {0x01}}
};

static struct LCM_setting_table lhbm_off_without51[] = {
	{0x87, 02, {0x0F, 0xFF}},
	{0x88, 01, {0x01}},
	{0x86, 01, {0x01}}
};

unsigned int m12_42_dphy_range_min_qp[15] = {
	0x0, 0x0, 0x5, 0x5, 0x7, 0x7, 0x7, 0x7, 0x7, 0x7, 0x9, 0x9, 0x9, 0xb, 0x11};
unsigned int m12_42_dphy_range_max_qp[15] = {
	0x0, 0x2, 0x9, 0xa, 0xb, 0xb, 0xb, 0xc, 0xd, 0xe, 0xf, 0x10, 0x11, 0x11, 0x13};
unsigned int m12_42_dphy_range_bpg_ofs[15] = {
	0x24, 0x4, 0x0, 0x3e, 0x3c, 0x3a, 0x38, 0x38, 0x38, 0x36, 0x36, 0x34, 0x34, 0x34, 0x34};

static struct LCM_setting_table peak_hdr_on[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0xF0}},
	{0xB2, 02, {0x0F, 0x27}}
};

static struct LCM_setting_table peak_hdr_off[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0xF0}},
	{0xB2, 02, {0x0C, 0x5F}}
};

/* hbm DBI setting start */
static const int DBI_SETTING_1_THRESHOLD = 2047;
static const int DBI_SETTING_2_THRESHOLD = 2325;
static const int DBI_SETTING_3_THRESHOLD = 2700;
static const int DBI_SETTING_4_THRESHOLD = 3150;
static const int DBI_SETTING_OFF_THRESHOLD = 3600;

static char CMD_PAGE8[] = {0xF0, 0x55, 0xAA, 0x52, 0x08, 0x08};
/* for dbv <= 0x7ff(2047) or dbv >= 0xE11(3601)*/
static char DBI_SETTING_OFF_R[] = {0xCA, 0x00,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00};
static char DBI_SETTING_OFF_G[] = {0xCB, 0x00,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00};
static char DBI_SETTING_OFF_B[] = {0xCD, 0x00,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00};
/* for dbv >= 0x800(2048) and dbv <= 0x915(2325)*/
static char DBI_SETTING_1_R[] = {0xCA, 0xBE,0x80,0x00,0x77,0x80,0x80,
					0x77,0xC0,0xC0,0x67,0x40,0xC0,
					0x66,0xC0,0xC0,0x66,0xC0,0xC0};
static char DBI_SETTING_1_G[] = {0xCB, 0xAD,0x80,0x00,0x35,0x80,0xC0,
					0x02,0x80,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00};
static char DBI_SETTING_1_B[] = {0xCD, 0xBF,0x80,0x40,0x88,0x40,0x40,
					0x78,0xC0,0x80,0x66,0xC0,0x00,
					0x66,0x00,0x00,0x66,0x00,0x00};
/* for dbv >= 0x916(2326) and dbv <= 0xA8C(2700)*/
static char DBI_SETTING_2_R[] = {0xCA, 0xAD,0xC0,0xC0,0x77,0x80,0x80,
					0x77,0x80,0x80,0x56,0x40,0x40,
					0x55,0x40,0x40,0x55,0x40,0x40};
static char DBI_SETTING_2_G[] = {0xCB, 0x9C,0xC0,0x80,0x45,0x80,0x80,
					0x23,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00};
static char DBI_SETTING_2_B[] = {0xCD, 0xBE,0xC0,0x00,0x88,0x40,0x00,
					0x88,0x00,0x00,0x34,0x80,0x00,
					0x33,0x00,0x00,0x33,0x00,0x00};
/* for dbv >= 0xA8D(2701) and dbv <= 0xC4E(3150)*/
static char DBI_SETTING_3_R[] = {0xCA, 0x8A,0x00,0x00,0x46,0x40,0xC0,
					0x77,0x00,0x40,0x56,0x00,0x00,
					0x22,0x80,0x80,0x22,0x80,0x80};
static char DBI_SETTING_3_G[] = {0xCB, 0x79,0x80,0xC0,0x24,0x80,0x80,
					0x22,0x80,0x80,0x01,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00};
static char DBI_SETTING_3_B[] = {0xCD, 0x8B,0x00,0x00,0x46,0x80,0x80,
					0x77,0x00,0x00,0x23,0x80,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00};
/* for dbv >= 0xC4F(3151) and dbv <= 0xE10(3600)*/
static char DBI_SETTING_4_R[] = {0xCA, 0x46,0x40,0x40,0x34,0x00,0x80,
					0x44,0x00,0x80,0x22,0xC0,0xC0,
					0x02,0x00,0x00,0x00,0x00,0x00};
static char DBI_SETTING_4_G[] = {0xCB, 0x46,0x00,0x00,0x23,0x00,0x40,
					0x22,0x00,0x00,0x00,0x80,0x80,
					0x00,0x00,0x00,0x00,0x00,0x00};
static char DBI_SETTING_4_B[] = {0xCD, 0x37,0x00,0xC0,0x34,0x40,0xC0,
					0x54,0xC0,0x00,0x11,0x40,0x40,
					0x01,0x40,0x80,0x00,0x80,0x80};
/* hbm DBI setting end */

#ifdef CONFIG_FACTORY_BUILD
static struct LCM_setting_table doze_enable_h[] = {
	{0x5F, 01, {0x00}},
	{0x51, 04, {0x07, 0xFF, 0x0F,0xFE}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xB2, 01, {0x18}},
	{0x39, 01, {0x00}},
};
static struct LCM_setting_table doze_enable_l[] = {
	{0x5F, 01, {0x00}},
	{0x51, 04, {0x07, 0xFF, 0x01,0x55}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xB2, 01, {0x18}},
	{0x39, 01, {0x00}},
};
static struct LCM_setting_table table_652C[] = {
	{0x65, 01, {0x01}},
	{0x2C, 01, {0x00}},
};

static struct LCM_setting_table doze_disable_t[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xB2, 01, {0x98}},
	{0x65, 01, {0x00}},
	{0x38, 01, {0x00}},
	{0x51, 04, {0x07, 0xFF, 0x00, 0x00}},
};
static struct LCM_setting_table table_2C[] = {
	{0x2C, 01, {0x00}},
};

#endif

#endif // end of _PANEL_M12_42_02_0A_DSC_CMD_H_

/* SPDX-License-Identifier: GPL-2.0-only */
/*
 * Copyright (c) 2020, The Linux Foundation. All rights reserved.
 * Copyright (c) 2020 XiaoMi, Inc. All rights reserved.
 */

#ifndef _PANEL_M12_36_02_0B_DSC_CMD_H_
#define _PANEL_M12_36_02_0B_DSC_CMD_H_

#include <drm/drm_panel.h>
#include <drm/drm_modes.h>
#include <drm/mediatek_drm.h>
#include "mi_panel_ext.h"
#include "mi_dsi_panel_count.h"

#define DATA_RATE0		1152
#define DATA_RATE1		1152
#define DATA_RATE2		1152
#define DATA_RATE3		1152

#define MODE3_FPS		144
#define MODE3_HFP		160
#define MODE3_HSA		2
#define MODE3_HBP		4
#define MODE3_VFP		54
#define MODE3_VSA		10
#define MODE3_VBP		10

#define MODE2_FPS		90
#define MODE2_HFP		160
#define MODE2_HSA		2
#define MODE2_HBP		4
#define MODE2_VFP		54
#define MODE2_VSA		10
#define MODE2_VBP		10

#define MODE1_FPS		120
#define MODE1_HFP		160
#define MODE1_HSA		2
#define MODE1_HBP		4
#define MODE1_VFP		54
#define MODE1_VSA		10
#define MODE1_VBP		10

#define MODE0_FPS		60
#define MODE0_HFP		408
#define MODE0_HSA		2
#define MODE0_HBP		4
#define MODE0_VFP		54
#define MODE0_VSA		10
#define MODE0_VBP		10

#define FRAME_WIDTH		(1220)
#define	FRAME_HEIGHT		(2712)

#define MAX_BRIGHTNESS_CLONE	16383
#define RTE_OFF			0xFFFF
#define RTE_CMD			0xEEEE

#define REGFLAG_DELAY		0xFFFC
#define REGFLAG_UDELAY		0xFFFB
#define REGFLAG_END_OF_TABLE    0xFFFD
#define REGFLAG_RESET_LOW	0xFFFE
#define REGFLAG_RESET_HIGH	0xFFFF

#define SPR_2D_RENDERING_DUMMY
#ifdef SPR_2D_RENDERING_DUMMY
#define SPR_2D_RENDERING (1)
#endif

#define DSC_ENABLE                  1
#define DSC_VER                     17
#define DSC_SLICE_MODE              1
#define DSC_RGB_SWAP                0
#define DSC_DSC_CFG                 40
#define DSC_RCT_ON                  1
#define DSC_BIT_PER_CHANNEL         10
#define DSC_DSC_LINE_BUF_DEPTH      11
#define DSC_BP_ENABLE               1
#define DSC_BIT_PER_PIXEL           128
#define DSC_SLICE_HEIGHT            12
#define DSC_SLICE_WIDTH             610
#define DSC_CHUNK_SIZE              610
#define DSC_XMIT_DELAY              512
#define DSC_DEC_DELAY               588
#define DSC_SCALE_VALUE             32
#define DSC_INCREMENT_INTERVAL      292
#define DSC_DECREMENT_INTERVAL      8
#define DSC_LINE_BPG_OFFSET         13
#define DSC_NFL_BPG_OFFSET          2421
#define DSC_SLICE_BPG_OFFSET        1915
#define DSC_INITIAL_OFFSET          6144
#define DSC_FINAL_OFFSET            4336
#define DSC_FLATNESS_MINQP          7
#define DSC_FLATNESS_MAXQP          16
#define DSC_RC_MODEL_SIZE           8192
#define DSC_RC_EDGE_FACTOR          6
#define DSC_RC_QUANT_INCR_LIMIT0    15
#define DSC_RC_QUANT_INCR_LIMIT1    15
#define DSC_RC_TGT_OFFSET_HI        3
#define DSC_RC_TGT_OFFSET_LO        3

static const char *panel_name = "panel_name=dsi_m12_36_02_0b_dsc_cmd";
static const int panel_id= PANEL_1ST;


static struct LCM_setting_table init_setting_peak2600[] = {
	/* disable DIC AVDD Discharge */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x01}},
	{0x6F, 01, {0x02}},
	{0xB0, 01, {0x00}},
	{0xE4, 01, {0x80}},
	{0x6F, 01, {0x0A}},
	{0xE4, 01, {0x80}},
	/* init code */
	{0x88,  9, {0x01,0x02,0x62,0x09,0x8C,0x00,0x00,0x00,0x00}},
	{0x87, 03, {0x00,0x0F,0xFF}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x81}},
	{0x6F, 01, {0x19}},
	{0xFB, 01, {0x00}},
	{0x6F, 01, {0x05}},
	{0xFE, 01, {0x34}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x80}},
	{0x6F, 01, {0x1A}},
	{0xF4, 01, {0x55}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x83}},
	{0x6F, 01, {0x12}},
	{0xFE, 01, {0x41}},
	{0x5F, 01, {0x01}},
	{0x26, 01, {0x00}},
	{0x17, 01, {0x10}},
	{0x2A, 04, {0x00,0x00,0x04,0xC3}},
	{0x2B, 04, {0x00,0x00,0x0A,0x97}},
	{0x35, 01, {0x00}},
	{0x44, 02, {0x0A,0x70}},
	{0x53, 01, {0x20}},
	{0x90, 01, {0x03}},
	{0x91, 18, {0xAB, 0x28, 0x00, 0x0C, 0xD2, 0x00, 0x02, 0x4C, 0x01, 0x24, 0x00, 0x08, 0x09, 0x75, 0x07, 0x7B, 0x10, 0xF0}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x81}},
	{0x6F, 01, {0x0B}},
	{0xFD, 01, {0x80}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x81}},
	{0x6F, 01, {0x0E}},
	{0xF5, 01, {0x00}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x80}},
	{0x6F, 01, {0x0F}},
	{0xFC, 01, {0x00}},
	{0x6F, 01, {0x09}},
	{0xFC, 02, {0xFC,0xF0}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x80}},
	{0x6F, 01, {0x15}},
	{0xF8, 02, {0x01,0x79}},
	{0x6F, 01, {0x31}},
	{0xF8, 02, {0x01,0x21}},
	{0x6F, 01, {0x01}},
	{0x1F, 01, {0x06}},
	{0x6F, 01, {0x0A}},
	{0xF6, 03, {0x70,0x70,0x70}},
	{0x6F, 01, {0x0E}},
	{0xF6, 01, {0x70}},
	{0x6F, 01, {0x2D}},
	{0xFC, 01, {0x44}},
	{0x2F, 01, {0x01}},
	{0x51, 02, {0x00,0x00}},
	{0x6F, 01, {0x04}},
	{0x51, 02, {0x00,0x00}},
	/* ESD Error Flag, Normal High, Error Low */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x01}},
	{0xBE, 01, {0x45}},
	{0x6F, 01, {0x05}},
	{0xBE, 01, {0x88}},
	/* 1200nit Data Remapping */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0xB2, 01, {0x80}},
	{0x6F, 01, {0xBE}},
	{0xB3, 01, {0x01}},
	/* Pretrigger Abnormal power down protection */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x01}},
	{0x6F, 01, {0x05}},
	{0xC7, 02, {0x27,0x08}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x01}},
	{0x6F, 01, {0x09}},
	{0xC7, 01, {0x24}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x05}},
	{0xCB, 07, {0x33,0x33,0x33,0x33,0x33,0x33,0x33}},
	/* DOSP */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0xC6, 16, {0xA5,0xDA,0x55,0x53,0xA5,0xDA,0x55,0x53,0xA5,0xDA,0x55,0x53,0xA5,0xDA,0x55,0x53}},
	/* Reduce power consumption */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x05}},
	{0xE1, 01, {0x00}},
	/* Video trim */
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0xC3, 41, {0xDD, 0x06, 0x22, 0x12, 0xFF, 0x00,
				0x06, 0x20, 0x12, 0xFF, 0x00, 0x04,
				0x53, 0x12, 0x05, 0xFD, 0x19, 0x04,
				0x55, 0x12, 0x05, 0xFD, 0x19, 0x04,
				0x60, 0x12, 0x05, 0xFD, 0x19, 0x04,
				0x60, 0x12, 0x05, 0xFD, 0x19, 0x04,
				0x60, 0x12, 0x05, 0xFD, 0x19}},
	/*AOD swire fixed*/
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0x6F, 01, {0x01}},
	{0xD2, 04, {0x00, 0x00, 0x00, 0x20}},
	{0xE4, 03, {0x80, 0x05, 0x5C}},
	{0x6F, 01, {0x07}},
	{0xE4, 02, {0x05, 0x5C}},
	{0x6F, 01, {0x0A}},
	{0xE4, 03, {0x80, 0x05, 0x5C}},
	{0x11, 01, {0x00}},
	{REGFLAG_DELAY, 120, {}},
	{0x29, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table init_setting_peak2600_gamma[] = {
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x10}},
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x00,0x00,0x00,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00}},
	{0xB8, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x10}},
	{0xB8, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x20}},
	{0xB8, 16, {0x00,0x00,0x00,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x0F,0xFF}},
	{0x6F, 01, {0x30}},
	{0xB8, 16, {0x08,0x00,0x08,0x00,0x0F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x40}},
	{0xB8, 12, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};


static struct LCM_setting_table init_setting[] = {
	/* Improve startup flashing red issue*/
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x07}},
	{0xB5, 05, {0x00,0x28,0x00,0x00,0x00}},
	{0x6F, 01, {0x11}},
	{0xB5, 05, {0x28,0x28,0x28,0x28,0x28}},
	{0x6F, 01, {0x2D}},
	{0xB5, 23, {0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,
		0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,
		0x20,0x20,0x0F,0x0F,0x0F,0x0F,0x0F}},
	{0x6F, 01, {0x44}},
	{0xB5, 23, {0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,
		0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,
		0x20,0x20,0x0F,0x0F,0x0F,0x0F,0x0F}},
	/* Improve flash green when aod-lhbm*/
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x35}},
	{0xDF, 01, {0x20}},
	{0x6F, 01, {0x38}},
	{0xDF,  8, {0x00,0x14,0x00,0x14,0x00,0x14,0x00,0x14}},
	/* Page 1 */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x01}},
	{0x6F, 01, {0x0B}},
	/* dly_aod_elvss */
	{0XE4, 04, {0x10,0x00,0x10,0x00}},
	{0x6F, 01, {0x01}},
	/* Remove AOD insert black frame */
	{0xD2, 01, {0x00}},
	{0x6F, 01, {0x04}},
	/* AOD IN SWIRE */
	{0xD2, 01, {0x8F}},
	{0x6F, 01, {0x0E}},
	/* extend proch enable */
	{0xD2, 01, {0x03}},
	{0x6F, 01, {0x0F}},
	/* extend proch IN */
	{0xD2, 02, {0x02,0xB0}},
	{0x6F, 01, {0x11}},
	/* extend proch OUT */
	{0xD2, 02, {0x05,0x60}},
	{0X6F, 01, {02}},
	/* disable DIC AVDD Discharge */
	{0xB0, 01, {0x00}},
	{0xE4, 01, {0x80}},
	{0x6F, 01, {0x0A}},
	{0xE4, 01, {0x80}},
	/* EN_AUTO_VBPREM */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x05}},
	{0xB0, 01, {0x83}},
	{0xE1, 01, {0x00}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x2E}},
	{0xB4, 30, {0x0A,0xC0,0x0A,0x00,0x09,0xC0,0x09,0xC0,
		0x08,0xE8,0x08,0xE8,0x08,0x00,0x08,0x00,
		0x05,0xD0,0x05,0xD0,0x03,0x3C,0x03,0x3C,
		0x00,0x14,0x00,0x14,0x00,0x14}},
	{0x6F, 01, {0x4C}},
	{0xB4, 16, {0x00,0x14,0x00,0x14,0x00,0x14,0x00,0x14,
		0x00,0x14,0x00,0x14,0x00,0x14,0x00,0x14}},
	/* Close PMIC SSD */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x1A}},
	{0xB5, 01, {0x16}},
	/* AOD not plug in black */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x01}},
	{0x6F, 01, {0x01}},
	{0xD2, 01, {0x00}},
	/* init code */
	{0x88,  9, {0x01,0x02,0x62,0x09,0x8C,0x00,0x00,0x00,0x00}},
	{0x87, 03, {0x00,0x0F,0xFF}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x81}},
	{0x6F, 01, {0x19}},
	{0xFB, 01, {0x00}},
	{0x6F, 01, {0x05}},
	{0xFE, 01, {0x34}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x80}},
	{0x6F, 01, {0x1A}},
	{0xF4, 01, {0x55}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x83}},
	{0x6F, 01, {0x12}},
	{0xFE, 01, {0x41}},
	{0x5F, 01, {0x01}},
	{0x26, 01, {0x00}},
	{0x17, 01, {0x10}},
	{0x2A, 04, {0x00,0x00,0x04,0xC3}},
	{0x2B, 04, {0x00,0x00,0x0A,0x97}},
	{0x35, 01, {0x00}},
	{0x44, 02, {0x0A,0x70}},
	{0x53, 01, {0x20}},
	{0x90, 01, {0x03}},
	{0x91, 18, {0xAB, 0x28, 0x00, 0x0C, 0xD2, 0x00, 0x02, 0x4C, 0x01, 0x24, 0x00, 0x08, 0x09, 0x75, 0x07, 0x7B, 0x10, 0xF0}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x81}},
	{0x6F, 01, {0x0B}},
	{0xFD, 01, {0x80}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x81}},
	{0x6F, 01, {0x0E}},
	{0xF5, 01, {0x00}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x80}},
	{0x6F, 01, {0x0F}},
	{0xFC, 01, {0x00}},
	{0x6F, 01, {0x09}},
	{0xFC, 02, {0xFC,0xF0}},
	{0xFF, 04, {0xAA,0x55,0xA5,0x80}},
	{0x6F, 01, {0x15}},
	{0xF8, 02, {0x01,0x79}},
	{0x6F, 01, {0x31}},
	{0xF8, 02, {0x01,0x21}},
	{0x6F, 01, {0x01}},
	{0x1F, 01, {0x06}},
	{0x6F, 01, {0x0A}},
	{0xF6, 03, {0x70,0x70,0x70}},
	{0x6F, 01, {0x0E}},
	{0xF6, 01, {0x70}},
	{0x6F, 01, {0x2D}},
	{0xFC, 01, {0x44}},
	{0x2F, 01, {0x01}},
	{0x51, 02, {0x00,0x00}},
	{0x6F, 01, {0x04}},
	{0x51, 02, {0x00,0x00}},
	/* ESD Error Flag, Normal High, Error Low */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x01}},
	{0xBE, 01, {0x45}},
	{0x6F, 01, {0x05}},
	{0xBE, 01, {0x88}},
	/* Pretrigger Abnormal power down protection */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x01}},
	{0x6F, 01, {0x05}},
	{0xC7, 02, {0x27,0x08}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x01}},
	{0x6F, 01, {0x09}},
	{0xC7, 01, {0x24}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x05}},
	{0xCB, 07, {0x33,0x33,0x33,0x33,0x33,0x33,0x33}},
	/* DOSP */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0xC6, 16, {0xA5,0xDA,0x55,0x53,0xA5,0xDA,0x55,0x53,0xA5,0xDA,0x55,0x53,0xA5,0xDA,0x55,0x53}},
	/* fix fod unlock flash green */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x07}},
	{0xB5, 05, {0x00,0x28,0x00,0x00,0x00}},
	{0x6F, 01, {0x11}},
	{0xB5, 05, {0x28,0x28,0x28,0x28,0x28}},
	{0x6F, 01, {0x2D}},
	{0xB5, 23, {0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x20,0x20,0x0F,0x0F,0x0F,0x0F,0x0F}},
	{0x6F, 01, {0x44}},
	{0xB5, 23, {0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x27,0x20,0x20,0x0F,0x0F,0x0F,0x0F,0x0F}},
	/* V-Blanking Hiz */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0xC5, 03, {0x02,0x00,0x00}},
	/*AOD swire fixed*/
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0x6F, 01, {0x01}},
	{0xD2, 04, {0x00, 0x00, 0x00, 0x20}},
	{0xE4, 03, {0x80, 0x05, 0x5C}},
	{0x6F, 01, {0x07}},
	{0xE4, 02, {0x05, 0x5C}},
	{0x6F, 01, {0x0A}},
	{0xE4, 03, {0x80, 0x05, 0x5C}},
	{0x11, 01, {0x00}},
	{REGFLAG_DELAY, 120, {}},
	{0x29,	01,  {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

/* mode switch start */

static struct LCM_setting_table mode_144hz_setting_gir_peak2600[] = {
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x10}},
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0xA4,0x0C,0xA4}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x0C,0xA4,0x0C,0xA4,0x0C,0xA4,0x0C,0xA4,0x0C,0xA4,0x0C,0xA4,0x0C,0xA4}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_144hz_setting_gir_peak2600_gamma[] = {
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x10}},
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x00,0x00,0x00,0x00,0x0C,0xA4,0x0C,0xA4,0x0C,0xA4,0x0C,0xA4,0x0C,0xA4}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_non_144hz_setting_gir_peak2600[] = {
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x10}},
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x08,0x00}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_non_144hz_setting_gir_peak2600_gamma[] = {
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x10}},
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x00,0x00,0x00,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_144hz_setting_gir_off[] = {
	/* frequency select 144hz */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	//144 gir off code
	{0xE9, 04, {0x00,0x00,0x00,0x00}},
	//switch FCON, 144hz, gir off
	{0x2F, 01, {0x00}},
	//gir off
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_144hz_setting_gir_on[] = {
	/* frequency select 120hz */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x06}},
	//144 gir on code
	{0xB9, 04, {0x00,0x00,0x00,0x00}},
	//switch FCON, 144hz, gir off
	{0x2F, 01, {0x00}},
	//gir on
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_120hz_setting_gir_off[] = {
	/* frequency select 120hz */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	//120 gir off code
	{0xE9, 04, {0x00,0x00,0x00,0x00}},
	//switch FCON, 120hz, gir off
	{0x2F, 01, {0x01}},
	//gir off
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_120hz_setting_gir_on[] = {
	/* frequency select 120hz */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x06}},
	//120 gir on code
	{0xB9, 04, {0x00,0x00,0x00,0x00}},
	//switch FCON, 120hz, gir off
	{0x2F, 01, {0x01}},
	//gir on
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_90hz_setting_gir_off[] = {
	/* frequency select 90hz */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	//90 gir off code
	{0xE9, 04, {0x00,0x00,0x00,0x00}},
	//switch FCON, 90hz, gir off
	{0x2F, 01, {0x02}},
	//gir off
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_90hz_setting_gir_on[] = {
	/* frequency select 90hz */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x06}},
	//90hz gir on code
	{0xB9, 04, {0x00,0x00,0x00,0x00}},
	//switch FCON, 90hz, gir off
	{0x2F, 01, {0x02}},
	//gir on
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_60hz_setting_gir_off[] = {
	/* frequency select 60hz */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	//60 gir off code
	{0xE9, 04, {0x00,0x00,0x00,0x00}},
	//switch FCON, 60hz, gir off
	{0x2F, 01, {0x03}},
	//gir off
	{0x5F, 01, {0x01}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_60hz_setting_gir_on[] = {
	/* frequency select 60hz */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x06}},
	//90hz gir on code
	{0xB9, 04, {0x00,0x00,0x00,0x00}},
	//switch FCON, 60hz, gir off
	{0x2F, 01, {0x03}},
	//gir on
	{0x5F, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
/* mode switch end */

/* GIR start */
/* for 144hz gir switch */
static struct LCM_setting_table gir_off_144hz_settings[] = {
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	//144 gir off code
	{0xE9, 04, {0x00,0x00,0x00,0x00}},
	//gir off gamma mapping
	{0x26, 01, {0x00}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x03}},
	{0xC0, 03, {0x21,0x03,0x02}},
	//gir off
	{0x5F, 01, {0x01}},
	//gamma update
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x02}},
	{0xCC, 01, {0x30}},
	{0xCE, 01, {0x01}},
};

static struct LCM_setting_table gir_on_144hz_settings[] = {
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x06}},
	//144 gir on code
	{0xB9, 04, {0x00,0x00,0x00,0x00}},
	//gir on gamma mapping
	{0x26, 01, {0x04}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x03}},
	{0xC0, 03, {0x65,0x47,0x07}},
	//gir on
	{0x5F, 01, {0x00}},
	//gamma update
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x02}},
	{0xCC, 01, {0x30}},
	{0xCE, 01, {0x01}},
};

/* for 120/90/60hz gir switch */
static struct LCM_setting_table gir_off_not_144hz_settings[] = {
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	//120 gir off code
	{0xE9, 04, {0x00,0x00,0x00,0x00}},
	//gir off gamma mapping
	{0x26, 01, {0x00}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x03}},
	{0xC0, 03, {0x21,0x03,0x02}},
	//gir off
	{0x5F, 01, {0x01}},
	//gamma update
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x02}},
	{0xCC, 01, {0x30}},
	{0xCE, 01, {0x01}},
};
static struct LCM_setting_table gir_on_not_144hz_settings[] = {
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x06}},
	//120 gir on code
	{0xB9, 04, {0x00,0x00,0x00,0x00}},
	//gir on gamma mapping
	{0x26, 01, {0x04}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x03}},
	{0xC0, 03, {0x65,0x47,0x07}},
	//gir on
	{0x5F, 01, {0x00}},
	//gamma update
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x02}},
	{0xCC, 01, {0x30}},
	{0xCE, 01, {0x01}},
};

static struct LCM_setting_table gir_switch_gamma_update[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xCC, 01, {0x00}},
};

static struct LCM_setting_table gir_on_not_144hz_for_panel_init[] = {
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x06}},
	//120 gir on code
	{0xB9, 04, {0x00,0x00,0x00,0x00}},
	//gir on gamma mapping
	{0x26, 01, {0x04}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x03}},
	{0xC0, 03, {0x65,0x47,0x07}},
	//gir on
	{0x5F, 01, {0x00}},
	//gamma update
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x02}},
	{0xCC, 01, {0x30}},
	{0xCE, 01, {0x01}},
	{REGFLAG_DELAY, 25, {}},
	{0xCC, 01, {0x00}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
/* GIR end */

static struct LCM_setting_table lhbm_normal_white_1200nit[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x31}},
	{0xDF, 01, {0x21}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD0, 06, {0x09, 0x30, 0x08, 0x1c, 0x0A, 0x30}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x4C}},
	{0xDF, 02, {0x1F, 0xFC}},
	{0x88, 05, {0x01, 0x02, 0x62, 0x09,0x8C}},
	{0x87, 03, {0x25, 0x0F, 0xFF}},
};

static struct LCM_setting_table lhbm_hlpm_white_1200nit[] = {
	//aod off
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0xE4, 01, {0x80}},
	{0x6F, 01, {0x0A}},
	{0xE4, 01, {0x80}},
	{0x65, 01, {0x00}},
	{0x38, 01, {0x00}},
	{0x51, 06, {0x00, 0xF6, 0x00, 0xF6, 0x03, 0xFF}},
	{0x2c, 01, {0x00}},
	//normal lhbm setting
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x31}},
	{0xDF, 01, {0x21}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD0, 06, {0x09, 0x30, 0x08, 0x1c, 0x0A, 0x30}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x4C}},
	{0xDF, 02, {0x1F, 0xFC}},
	{0x88, 05, {0x01, 0x02, 0x62, 0x09,0x8C}},
	{0x87, 03, {0x25, 0x0F, 0xFF}},
};

static struct LCM_setting_table lhbm_normal_white_250nit[] = {
	//normal lhbm setting
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x31}},
	{0xDF, 01, {0x22}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD0, 06, {0x06, 0x55, 0x05, 0xCC, 0x07, 0x1F}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x4C}},
	{0xDF, 02, {0x05, 0x20}},
	{0x88, 05, {0x01, 0x02, 0x62, 0x09,0x8C}},
	{0x87, 03, {0x25, 0x06, 0xA0}},
};

static struct LCM_setting_table lhbm_hlpm_white_250nit[] = {
	//aod off
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0xE4, 01, {0x80}},
	{0x6F, 01, {0x0A}},
	{0xE4, 01, {0x80}},
	{0x65, 01, {0x00}},
	{0x38, 01, {0x00}},
	{0x51, 06, {0x00, 0x14, 0x00, 0x14, 0x01, 0xFF}},
	{0x2c, 01, {0x00}},
	//normal lhbm setting
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x31}},
	{0xDF, 01, {0x22}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD0, 06, {0x06, 0x55, 0x05, 0xCC, 0x07, 0x1F}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x4C}},
	{0xDF, 02, {0x05, 0x20}},
	{0x88, 05, {0x01, 0x02, 0x62, 0x09,0x8C}},
	{0x87, 03, {0x25, 0x06, 0xA0}},
};


static struct LCM_setting_table lhbm_normal_green_500nit[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x31}},
	{0xDF, 01, {0x22}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD0, 06, {0x00, 0x00, 0x07, 0xBC, 0x00, 0x00}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x4C}},
	{0xDF, 02, {0x1F, 0xFC}},
	{0x88, 05, {0x01, 0x02, 0x62, 0x09,0x8C}},
	{0x87, 03, {0x25, 0x0F, 0xFF}},
};

static struct LCM_setting_table lhbm_off[] = {
	{0x51, 02, {0x05, 0xff}},
	{0x87, 01, {0x00}},
};

unsigned int m12_36_dphy_range_min_qp[15] = {
		0x0, 0x0, 0x5, 0x5, 0x7, 0x7, 0x7, 0x7, 0x7, 0x8, 0x9, 0x9, 0x9, 0xc, 0x10};
unsigned int m12_36_dphy_range_max_qp[15] = {
		0x0, 0x2, 0x9, 0xa, 0xb, 0xb, 0xb, 0xc, 0xd, 0xe, 0xe, 0xf, 0xf, 0x10, 0x11};
unsigned int m12_36_dphy_range_bpg_ofs[15] = {
		0x24, 0x4, 0x0, 0x3e, 0x3c, 0x3a, 0x38, 0x38, 0x38, 0x36, 0x36, 0x36, 0x34, 0x34, 0x34};

static struct LCM_setting_table peak_hdr_on[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xB2, 01, {0x00}},
	{0x6F, 01, {0xBE}},
	{0xB3, 01, {0x01}}
};

static struct LCM_setting_table peak_hdr_off[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xB2, 01, {0x80}},
	{0x6F, 01, {0xBE}},
	{0xB3, 01, {0x01}}
};

static struct LCM_setting_table bl_value_table[] = {
	{0x51, 02, {0x00, 0x00}}
};

#ifdef CONFIG_FACTORY_BUILD
static struct LCM_setting_table doze_enable_h[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x01}},
	{0xBE, 01, {0x41}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0xE4, 01, {0x90}},
	{0x6F, 01, {0x0A}},
	{0xE4, 01, {0x90}},
	{0x51, 06, {0x07, 0xFF, 0x07, 0xFF, 0x03, 0xFF}},
	{0x65, 01, {0x01}},
	{0x39, 01, {0x00}},
	{0x2C, 01, {0x00}},
};
static struct LCM_setting_table doze_enable_l[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x01}},
	{0xBE, 01, {0x41}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0xE4, 01, {0x90}},
	{0x6F, 01, {0x0A}},
	{0xE4, 01, {0x90}},
	{0x51, 06, {0x07, 0xFF, 0x07, 0xFF, 0x01, 0xFF}},
	{0x65, 01, {0x01}},
	{0x39, 01, {0x00}},
	{0x2C, 01, {0x00}},
};

static struct LCM_setting_table doze_disable_t[] = {
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0xE4, 01, {0x80}},
	{0x6F, 01, {0x0A}},
	{0xE4, 01, {0x80}},
	{0x65, 01, {0x00}},
	{0x38, 01, {0x00}},
	{0x51, 06, {0x07, 0xFF, 0x07, 0xFF, 0x00, 0x00}},
	{0x2C, 01, {0x00}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0x6F, 01, {0x01}},
	{0xBE, 01, {0x45}},
};

#endif

#endif // end of _PANEL_M12_36_02_0B_DSC_CMD_H_
